// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBase.Models;

namespace ProyectoBase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_estatus", b =>
                {
                    b.Property<int>("IdTipoEstatus");

                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("DesEstatus")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("IdTipoEstatus", "IdEstatus");

                    b.HasAlternateKey("IdEstatus");

                    b.ToTable("cat_estatus");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_generales", b =>
                {
                    b.Property<int>("IdTipoGeneral");

                    b.Property<int>("IdGeneral")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DesGeneral")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("IdTipoGeneral", "IdGeneral");

                    b.HasAlternateKey("IdGeneral");

                    b.ToTable("cat_generales");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_prod_serv_especifico", b =>
                {
                    b.Property<int>("IdProdServ");

                    b.Property<int>("IdProdServEsp")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveProdServEsp")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DesProdServEsp")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("IdProdServ", "IdProdServEsp");

                    b.HasAlternateKey("IdProdServEsp");

                    b.ToTable("cat_prod_serv_especifico");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", b =>
                {
                    b.Property<int>("IdProdServ")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveProdServ")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("DesProdServ")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("IdGenProdServ");

                    b.Property<int>("IdTipoGenProdServ");

                    b.Property<string>("ProductoServicio")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<int?>("cat_generalesIdGeneral");

                    b.Property<int?>("cat_generalesIdTipoGeneral");

                    b.Property<int?>("cat_tipos_generalesIdTipoGeneral");

                    b.HasKey("IdProdServ");

                    b.HasIndex("cat_tipos_generalesIdTipoGeneral");

                    b.HasIndex("cat_generalesIdTipoGeneral", "cat_generalesIdGeneral");

                    b.ToTable("cat_productos_servicios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_tipos_estatus", b =>
                {
                    b.Property<int>("IdTipoEstatus")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("DesTipoEstatus")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("IdTipoEstatus");

                    b.ToTable("cat_tipos_estatus");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_tipos_generales", b =>
                {
                    b.Property<int>("IdTipoGeneral")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("DesTipo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("IdTipoGeneral");

                    b.ToTable("cat_tipos_generales");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", b =>
                {
                    b.Property<int>("IdEdificio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DesEdificio")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Prioridad");

                    b.HasKey("IdEdificio");

                    b.ToTable("eva_cat_edificios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", b =>
                {
                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Capacidad");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DesEspacio")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Prioridad");

                    b.HasKey("IdEdificio", "IdEspacio");

                    b.HasAlternateKey("IdEspacio");

                    b.ToTable("eva_cat_espacios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_cat_zonas", b =>
                {
                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio");

                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsientosPorFila");

                    b.Property<int>("CapacidadPer");

                    b.Property<string>("DesZona")
                        .IsRequired()
                        .HasMaxLength(225);

                    b.Property<int>("Filas");

                    b.HasKey("IdEdificio", "IdEspacio", "IdZona");

                    b.HasAlternateKey("IdZona");

                    b.ToTable("res_cat_zonas");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_cliente_boletos", b =>
                {
                    b.Property<int>("IdReservaCliente");

                    b.Property<int>("IdEvento");

                    b.Property<int>("IdBoleto");

                    b.Property<string>("ConfirmaAsistencia");

                    b.Property<int>("IdPersona");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("IdReservaCliente", "IdEvento", "IdBoleto");

                    b.HasIndex("IdBoleto");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdEvento", "IdReservaCliente");

                    b.ToTable("res_evento_cliente_boletos");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_cliente_prod_serv", b =>
                {
                    b.Property<int>("IdEvento");

                    b.Property<int>("IdReservaCliente");

                    b.Property<int>("IdReservaServDet")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cantidad");

                    b.Property<float>("IVA");

                    b.Property<int>("IdProdServ");

                    b.Property<int>("IdProdServEsp");

                    b.Property<int>("IdUnidadMedida");

                    b.Property<float>("Importe");

                    b.Property<float>("Precio");

                    b.HasKey("IdEvento", "IdReservaCliente", "IdReservaServDet");

                    b.HasAlternateKey("IdReservaServDet");

                    b.HasIndex("IdProdServ", "IdProdServEsp");

                    b.ToTable("res_evento_cliente_prod_serv");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_clientes", b =>
                {
                    b.Property<int>("IdEvento");

                    b.Property<int>("IdReservaCliente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdClienteReserva");

                    b.HasKey("IdEvento", "IdReservaCliente");

                    b.HasAlternateKey("IdReservaCliente");

                    b.ToTable("res_evento_clientes");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_estatus", b =>
                {
                    b.Property<int>("IdEvento");

                    b.Property<int>("IdEstatusDet")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<DateTime>("FechaEstatus");

                    b.Property<int>("IdEstatus");

                    b.Property<int>("IdTipoEstatus");

                    b.Property<string>("Observacion")
                        .HasMaxLength(500);

                    b.Property<string>("UsuarioReg")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdEvento", "IdEstatusDet");

                    b.HasAlternateKey("IdEstatusDet");

                    b.HasIndex("IdTipoEstatus", "IdEstatus");

                    b.ToTable("res_evento_estatus");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_horarios", b =>
                {
                    b.Property<int>("IdEvento");

                    b.Property<int>("IdHorarioDet")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Disponible")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<DateTime>("FechaHoraFin");

                    b.Property<DateTime>("FechaHoraIni");

                    b.Property<DateTime>("FechaReg");

                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio");

                    b.Property<string>("UsuarioReg")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.HasKey("IdEvento", "IdHorarioDet");

                    b.HasAlternateKey("IdHorarioDet");

                    b.HasIndex("IdEdificio", "IdEspacio");

                    b.ToTable("res_evento_horarios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_servicios", b =>
                {
                    b.Property<int>("IdEvento");

                    b.Property<int>("IdProdServ");

                    b.Property<int>("IdProdServEsp");

                    b.Property<string>("Requerido")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("IdEvento", "IdProdServ", "IdProdServEsp");

                    b.HasIndex("IdProdServ", "IdProdServEsp");

                    b.ToTable("res_evento_servicios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boleto_estatus", b =>
                {
                    b.Property<int>("IdBoleto");

                    b.Property<int>("IdEstatusDet")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<DateTime>("FechaEstatus");

                    b.Property<int>("IdEstatus");

                    b.Property<int>("IdTipoEstatus");

                    b.Property<string>("Observacion")
                        .HasMaxLength(500);

                    b.Property<string>("UsuarioReg")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdBoleto", "IdEstatusDet");

                    b.HasAlternateKey("IdEstatusDet");

                    b.HasIndex("IdTipoEstatus", "IdEstatus");

                    b.ToTable("res_evento_zona_boleto_estatus");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boletos", b =>
                {
                    b.Property<int>("IdBoleto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesBoleto")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<float>("IVA");

                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio");

                    b.Property<int>("IdEvento");

                    b.Property<int>("IdZona");

                    b.Property<string>("NumBoleto")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<float>("Precio");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdBoleto");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdEdificio", "IdEspacio", "IdZona");

                    b.ToTable("res_evento_zona_boletos");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zonas", b =>
                {
                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio");

                    b.Property<int>("IdEvento");

                    b.Property<int>("IdZona");

                    b.Property<DateTime>("FechaReg");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UsuarioReg")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("IdEdificio", "IdEspacio", "IdEvento", "IdZona");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdEdificio", "IdEspacio", "IdZona");

                    b.ToTable("res_evento_zonas");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_eventos", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Explicacion")
                        .HasMaxLength(3000);

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaIn");

                    b.Property<DateTime>("FechaReg");

                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdGenEvento");

                    b.Property<int>("IdPersonaReg");

                    b.Property<int>("IdTipoGenEvento");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Observacion")
                        .HasMaxLength(1000);

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("UsuarioReg");

                    b.Property<int?>("cat_generalesIdGeneral");

                    b.Property<int?>("cat_generalesIdTipoGeneral");

                    b.Property<int?>("cat_tipos_generalesIdTipoGeneral");

                    b.Property<int?>("rh_cat_personasIdPersona");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdEdificio");

                    b.HasIndex("cat_tipos_generalesIdTipoGeneral");

                    b.HasIndex("rh_cat_personasIdPersona");

                    b.HasIndex("cat_generalesIdTipoGeneral", "cat_generalesIdGeneral");

                    b.ToTable("res_eventos");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_zonas_servicios", b =>
                {
                    b.Property<int>("IdEdificio");

                    b.Property<int>("IdEspacio");

                    b.Property<int>("IdZona");

                    b.Property<int>("IdProdServ");

                    b.Property<int>("IdProdServEsp");

                    b.HasKey("IdEdificio", "IdEspacio", "IdZona", "IdProdServ", "IdProdServEsp");

                    b.HasAlternateKey("IdEdificio", "IdEspacio", "IdProdServ", "IdProdServEsp", "IdZona");

                    b.HasIndex("IdProdServ", "IdProdServEsp");

                    b.ToTable("res_zonas_servicios");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.rh_cat_personas", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(20);

                    b.Property<string>("ApMaterno")
                        .HasMaxLength(60);

                    b.Property<string>("ApPaterno")
                        .HasMaxLength(60);

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTime>("FechaNac");

                    b.Property<int>("IdInstituto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NumControl")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("RFC")
                        .HasMaxLength(10);

                    b.Property<string>("RutaFoto")
                        .HasMaxLength(255);

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("IdPersona");

                    b.ToTable("rh_cat_personas");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_estatus", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_estatus", "cat_tipos_estatus")
                        .WithMany()
                        .HasForeignKey("IdTipoEstatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_generales", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_generales", "cat_tipos_generales")
                        .WithMany()
                        .HasForeignKey("IdTipoGeneral")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_prod_serv_especifico", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", "cat_productos_servicios")
                        .WithMany()
                        .HasForeignKey("IdProdServ")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_generales", "cat_tipos_generales")
                        .WithMany()
                        .HasForeignKey("cat_tipos_generalesIdTipoGeneral");

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_generales", "cat_generales")
                        .WithMany()
                        .HasForeignKey("cat_generalesIdTipoGeneral", "cat_generalesIdGeneral");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_cat_zonas", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", "eva_cat_espacios")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_cliente_boletos", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boletos", "res_evento_zona_boletos")
                        .WithMany()
                        .HasForeignKey("IdBoleto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.rh_cat_personas", "rh_cat_personas")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_evento_clientes", "res_evento_clientes")
                        .WithMany()
                        .HasForeignKey("IdEvento", "IdReservaCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_cliente_prod_serv", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", "cat_productos_servicios")
                        .WithMany()
                        .HasForeignKey("IdProdServ")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_evento_clientes", "res_evento_clientes")
                        .WithMany()
                        .HasForeignKey("IdEvento", "IdReservaCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_prod_serv_especifico", "cat_prod_serv_especifico")
                        .WithMany()
                        .HasForeignKey("IdProdServ", "IdProdServEsp")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_clientes", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_estatus", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_estatus", "cat_tipos_estatus")
                        .WithMany()
                        .HasForeignKey("IdTipoEstatus")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_estatus", "cat_estatus")
                        .WithMany()
                        .HasForeignKey("IdTipoEstatus", "IdEstatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_horarios", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", "eva_cat_espacios")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_servicios", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", "cat_productos_servicios")
                        .WithMany()
                        .HasForeignKey("IdProdServ")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_prod_serv_especifico", "cat_prod_serv_especifico")
                        .WithMany()
                        .HasForeignKey("IdProdServ", "IdProdServEsp")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boleto_estatus", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boletos", "res_evento_zona_boletos")
                        .WithMany()
                        .HasForeignKey("IdBoleto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_estatus", "cat_tipos_estatus")
                        .WithMany()
                        .HasForeignKey("IdTipoEstatus")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_estatus", "cat_estatus")
                        .WithMany()
                        .HasForeignKey("IdTipoEstatus", "IdEstatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zona_boletos", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", "eva_cat_espacios")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_cat_zonas", "res_cat_zonas")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio", "IdZona")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_evento_zonas", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_eventos", "res_eventos")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", "eva_cat_espacios")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_cat_zonas", "res_cat_zonas")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio", "IdZona")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_eventos", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_tipos_generales", "cat_tipos_generales")
                        .WithMany()
                        .HasForeignKey("cat_tipos_generalesIdTipoGeneral");

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.rh_cat_personas", "rh_cat_personas")
                        .WithMany()
                        .HasForeignKey("rh_cat_personasIdPersona");

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_generales", "cat_generales")
                        .WithMany()
                        .HasForeignKey("cat_generalesIdTipoGeneral", "cat_generalesIdGeneral");
                });

            modelBuilder.Entity("ProyectoBase.Models.FicGestionEventos.res_zonas_servicios", b =>
                {
                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_edificios", "eva_cat_edificios")
                        .WithMany()
                        .HasForeignKey("IdEdificio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_productos_servicios", "cat_productos_servicios")
                        .WithMany()
                        .HasForeignKey("IdProdServ")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.eva_cat_espacios", "eva_cat_espacios")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.cat_prod_serv_especifico", "cat_prod_serv_especifico")
                        .WithMany()
                        .HasForeignKey("IdProdServ", "IdProdServEsp")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoBase.Models.FicGestionEventos.res_cat_zonas", "res_cat_zonas")
                        .WithMany()
                        .HasForeignKey("IdEdificio", "IdEspacio", "IdZona")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
